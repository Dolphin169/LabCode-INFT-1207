# Generated by Selenium IDE
# Name: Kevin, Owen
# Date: 2025-03-13
# Description: Uses generated Selenium code to test a Body Fat Calculator
# Program name: test_Lab4_Kevin_Owen.py

import pytest
import time
import json
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.common.action_chains import ActionChains
from selenium.webdriver.support import expected_conditions
from selenium.webdriver.support.wait import WebDriverWait
from selenium.webdriver.common.keys import Keys
from selenium.webdriver.common.desired_capabilities import DesiredCapabilities


class TestLab4KevinOwen():
    def setup_method(self, method):
        self.driver = webdriver.Firefox()
        self.vars = {}

    def teardown_method(self, method):
        self.driver.quit()

    def test_invalidABCTestFemale(self):
        self.driver.get("https://www.calculator.net/body-fat-calculator.html")
        self.driver.set_window_size(550, 697)
        self.driver.find_element(By.CSS_SELECTOR, ".cbcontainer:nth-child(2) > .rbmark").click()
        self.driver.find_element(By.NAME, "cage").click()
        self.driver.find_element(By.NAME, "cage").click()
        self.driver.find_element(By.NAME, "cage").click()
        element = self.driver.find_element(By.NAME, "cage")
        actions = ActionChains(self.driver)
        actions.double_click(element).perform()
        self.driver.find_element(By.NAME, "cage").clear()
        self.driver.find_element(By.NAME, "cage").send_keys("abc")
        self.driver.find_element(By.NAME, "cweightkgs").clear()
        self.driver.find_element(By.NAME, "cweightkgs").send_keys("abc")
        self.driver.find_element(By.ID, "cheightmeter").clear()
        self.driver.find_element(By.ID, "cheightmeter").send_keys("abc")
        self.driver.find_element(By.ID, "cneckmeter").clear()
        self.driver.find_element(By.ID, "cneckmeter").send_keys("abc")
        self.driver.find_element(By.ID, "cwaistmeter").clear()
        self.driver.find_element(By.ID, "cwaistmeter").send_keys("abc")
        self.driver.find_element(By.ID, "chipmeter").clear()
        self.driver.find_element(By.ID, "chipmeter").send_keys("abc")
        self.driver.find_element(By.NAME, "x").click()
        assert self.driver.find_element(By.CSS_SELECTOR,
                                        "div:nth-child(1) > font").text == "Please provide a positive age."
        assert self.driver.find_element(By.CSS_SELECTOR,
                                        "div:nth-child(2) > font").text == "Please provide a positive weight."
        assert self.driver.find_element(By.CSS_SELECTOR,
                                        "div:nth-child(3) > font").text == "Height need to be positive."
        assert self.driver.find_element(By.CSS_SELECTOR, "div:nth-child(4) > font").text == "Neck need to be numeric."
        assert self.driver.find_element(By.CSS_SELECTOR, "div:nth-child(5) > font").text == "Waist need to be numeric."
        assert self.driver.find_element(By.CSS_SELECTOR, "div:nth-child(5) > font").text == "Waist need to be numeric."

    def test_invalidABCTestMale(self):
        self.driver.get("https://www.calculator.net/body-fat-calculator.html")
        self.driver.set_window_size(550, 697)
        self.driver.find_element(By.NAME, "cage").click()
        self.driver.find_element(By.NAME, "cage").click()
        element = self.driver.find_element(By.NAME, "cage")
        actions = ActionChains(self.driver)
        actions.double_click(element).perform()
        self.driver.find_element(By.NAME, "cage").send_keys("abc")
        self.driver.find_element(By.NAME, "cweightkgs").clear()
        self.driver.find_element(By.NAME, "cweightkgs").send_keys("abc")
        self.driver.find_element(By.ID, "cheightmeter").clear()
        self.driver.find_element(By.ID, "cheightmeter").send_keys("abc")
        self.driver.find_element(By.ID, "cneckmeter").clear()
        self.driver.find_element(By.ID, "cneckmeter").send_keys("abc")
        self.driver.find_element(By.ID, "cwaistmeter").clear()
        self.driver.find_element(By.ID, "cwaistmeter").send_keys("abc")
        self.driver.find_element(By.NAME, "x").click()
        assert self.driver.find_element(By.CSS_SELECTOR,
                                        "div:nth-child(1) > font").text == "Please provide a positive age."
        assert self.driver.find_element(By.CSS_SELECTOR,
                                        "div:nth-child(2) > font").text == "Please provide a positive weight."
        assert self.driver.find_element(By.CSS_SELECTOR,
                                        "div:nth-child(3) > font").text == "Height need to be positive."
        assert self.driver.find_element(By.CSS_SELECTOR, "div:nth-child(4) > font").text == "Neck need to be numeric."
        assert self.driver.find_element(By.CSS_SELECTOR, "div:nth-child(5) > font").text == "Waist need to be numeric."

    def test_invalidNagativeFemaleTest(self):
        self.driver.get("https://www.calculator.net/body-fat-calculator.html")
        self.driver.set_window_size(756, 811)
        self.driver.find_element(By.CSS_SELECTOR, ".cbcontainer:nth-child(2) > .rbmark").click()
        self.driver.find_element(By.CSS_SELECTOR, "input:nth-child(2)").click()
        self.driver.find_element(By.NAME, "cage").click()
        self.driver.find_element(By.NAME, "cage").send_keys("-20")
        self.driver.find_element(By.NAME, "cweightkgs").send_keys("-20")
        self.driver.find_element(By.ID, "cheightmeter").send_keys("-20")
        self.driver.find_element(By.ID, "cneckmeter").send_keys("-20")
        self.driver.find_element(By.ID, "cwaistmeter").send_keys("-20")
        self.driver.find_element(By.ID, "chipmeter").send_keys("-20")
        self.driver.find_element(By.NAME, "x").click()
        self.driver.find_element(By.CSS_SELECTOR, "div:nth-child(1) > font").click()
        self.driver.find_element(By.CSS_SELECTOR, "div:nth-child(2) > font").click()
        self.driver.find_element(By.CSS_SELECTOR, "div:nth-child(3) > font").click()
        self.driver.find_element(By.CSS_SELECTOR, "div:nth-child(4) > font").click()
        self.driver.find_element(By.CSS_SELECTOR, "div:nth-child(5) > font").click()
        self.driver.find_element(By.CSS_SELECTOR, "div:nth-child(6) > font").click()

    def test_invalidNagativeMaleTest(self):
        self.driver.get("https://www.calculator.net/body-fat-calculator.html")
        self.driver.set_window_size(756, 811)
        self.driver.find_element(By.CSS_SELECTOR, "input:nth-child(2)").click()
        self.driver.find_element(By.NAME, "cage").click()
        self.driver.find_element(By.NAME, "cage").send_keys("-20")
        self.driver.find_element(By.NAME, "cweightkgs").send_keys("-20")
        self.driver.find_element(By.ID, "cheightmeter").send_keys("-20")
        self.driver.find_element(By.ID, "cneckmeter").send_keys("-20")
        self.driver.find_element(By.ID, "cwaistmeter").send_keys("-20")
        self.driver.find_element(By.NAME, "x").click()
        self.driver.find_element(By.CSS_SELECTOR, "div:nth-child(1) > font").click()
        self.driver.find_element(By.CSS_SELECTOR, "div:nth-child(2) > font").click()
        self.driver.find_element(By.CSS_SELECTOR, "div:nth-child(3) > font").click()
        self.driver.find_element(By.CSS_SELECTOR, "div:nth-child(4) > font").click()
        self.driver.find_element(By.CSS_SELECTOR, "div:nth-child(5) > font").click()

    def test_invalidSpecialMaleTest(self):
        self.driver.get("https://www.calculator.net/body-fat-calculator.html")
        self.driver.set_window_size(1443, 811)
        element = self.driver.find_element(By.LINK_TEXT, "Other Units")
        actions = ActionChains(self.driver)
        actions.move_to_element(element).perform()
        self.driver.find_element(By.NAME, "cage").click()
        self.driver.find_element(By.NAME, "cage").clear()
        self.driver.find_element(By.NAME, "cage").send_keys("$%^&*")
        self.driver.find_element(By.NAME, "cweightkgs").clear()
        self.driver.find_element(By.NAME, "cweightkgs").send_keys("$%^&*(")
        self.driver.find_element(By.ID, "cheightmeter").clear()
        self.driver.find_element(By.ID, "cheightmeter").send_keys("$%^&*(")
        self.driver.find_element(By.ID, "cneckmeter").clear()
        self.driver.find_element(By.ID, "cneckmeter").send_keys("$%^&*(")
        self.driver.find_element(By.ID, "cwaistmeter").clear()
        self.driver.find_element(By.ID, "cwaistmeter").send_keys("$%^&*")
        self.driver.find_element(By.NAME, "x").click()
        assert self.driver.find_element(By.CSS_SELECTOR,
                                        "div:nth-child(1) > font").text == "Please provide a positive age."
        assert self.driver.find_element(By.CSS_SELECTOR,
                                        "div:nth-child(2) > font").text == "Please provide a positive weight."
        assert self.driver.find_element(By.CSS_SELECTOR,
                                        "div:nth-child(3) > font").text == "Height need to be positive."
        assert self.driver.find_element(By.CSS_SELECTOR, "div:nth-child(4) > font").text == "Neck need to be numeric."
        assert self.driver.find_element(By.CSS_SELECTOR, "div:nth-child(5) > font").text == "Waist need to be numeric."

    def test_invalidSpecialFemaleTest(self):
        self.driver.get("https://www.calculator.net/body-fat-calculator.html")
        self.driver.set_window_size(1443, 811)
        element = self.driver.find_element(By.LINK_TEXT, "Other Units")
        actions = ActionChains(self.driver)
        actions.move_to_element(element).perform()
        self.driver.find_element(By.CSS_SELECTOR, ".cbcontainer:nth-child(2) > .rbmark").click()
        self.driver.find_element(By.NAME, "cage").click()
        self.driver.find_element(By.NAME, "cage").clear()
        self.driver.find_element(By.NAME, "cage").send_keys("$%^&*")
        self.driver.find_element(By.NAME, "cweightkgs").clear()
        self.driver.find_element(By.NAME, "cweightkgs").send_keys("$%^&*(")
        self.driver.find_element(By.ID, "cheightmeter").clear()
        self.driver.find_element(By.ID, "cheightmeter").send_keys("$%^&*(")
        self.driver.find_element(By.ID, "cneckmeter").clear()
        self.driver.find_element(By.ID, "cneckmeter").send_keys("$%^&*(")
        self.driver.find_element(By.ID, "cwaistmeter").clear()
        self.driver.find_element(By.ID, "cwaistmeter").send_keys("$%^&*")
        self.driver.find_element(By.ID, "chipmeter").clear()
        self.driver.find_element(By.ID, "chipmeter").send_keys("$%^&*")
        self.driver.find_element(By.NAME, "x").click()
        assert self.driver.find_element(By.CSS_SELECTOR,
                                        "div:nth-child(1) > font").text == "Please provide a positive age."
        assert self.driver.find_element(By.CSS_SELECTOR,
                                        "div:nth-child(2) > font").text == "Please provide a positive weight."
        assert self.driver.find_element(By.CSS_SELECTOR,
                                        "div:nth-child(3) > font").text == "Height need to be positive."
        assert self.driver.find_element(By.CSS_SELECTOR, "div:nth-child(4) > font").text == "Neck need to be numeric."
        assert self.driver.find_element(By.CSS_SELECTOR, "div:nth-child(5) > font").text == "Waist need to be numeric."
        assert self.driver.find_element(By.CSS_SELECTOR, "div:nth-child(6) > font").text == "Hip need to be numeric."

    def test_vaildMaletest(self):
        self.driver.get("https://www.calculator.net/body-fat-calculator.html")
        self.driver.set_window_size(550, 697)
        self.driver.find_element(By.CSS_SELECTOR, "input:nth-child(2)").click()
        self.driver.find_element(By.CSS_SELECTOR, ".cbcontainer:nth-child(1) > .rbmark").click()
        self.driver.find_element(By.NAME, "cage").click()
        self.driver.find_element(By.NAME, "cage").send_keys("15")
        self.driver.find_element(By.NAME, "cweightkgs").click()
        self.driver.find_element(By.NAME, "cweightkgs").send_keys("220")
        self.driver.find_element(By.ID, "cheightmeter").click()
        self.driver.find_element(By.ID, "cheightmeter").send_keys("90")
        self.driver.find_element(By.ID, "cneckmeter").click()
        self.driver.find_element(By.ID, "cneckmeter").send_keys("18")
        self.driver.find_element(By.NAME, "calform").click()
        self.driver.find_element(By.ID, "cwaistmeter").click()
        self.driver.find_element(By.ID, "cwaistmeter").send_keys("100")
        self.driver.find_element(By.NAME, "x").click()
        assert self.driver.find_element(By.CSS_SELECTOR, "font > b").text == "Body Fat: 60.7%"

    def test_validFemaleTest(self):
        self.driver.get("https://www.calculator.net/body-fat-calculator.html")
        self.driver.set_window_size(550, 697)
        self.driver.find_element(By.CSS_SELECTOR, ".cbcontainer:nth-child(2) > .rbmark").click()
        self.driver.find_element(By.CSS_SELECTOR, "input:nth-child(2)").click()
        self.driver.find_element(By.NAME, "cage").click()
        self.driver.find_element(By.NAME, "cage").send_keys("40")
        self.driver.find_element(By.CSS_SELECTOR, "#metricheightweight tr:nth-child(1) > td:nth-child(2)").click()
        self.driver.find_element(By.NAME, "cweightkgs").click()
        self.driver.find_element(By.NAME, "cweightkgs").send_keys("100")
        self.driver.find_element(By.ID, "cheightmeter").click()
        self.driver.find_element(By.ID, "cheightmeter").send_keys("189")
        self.driver.find_element(By.ID, "cneckmeter").click()
        self.driver.find_element(By.ID, "cneckmeter").send_keys("57")
        self.driver.find_element(By.ID, "cwaistmeter").click()
        self.driver.find_element(By.ID, "cwaistmeter").send_keys("98")
        self.driver.find_element(By.ID, "chipmeter").click()
        self.driver.find_element(By.ID, "chipmeter").send_keys("100")
        self.driver.find_element(By.NAME, "x").click()
        assert self.driver.find_element(By.CSS_SELECTOR, "font > b").text == "Body Fat: 23.0%"
